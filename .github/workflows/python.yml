name: Pylint & Pytest

on: issue_comment

permissions: read-all

jobs:
  build:
    if: github.event.comment.body == 'PYLINT&PYTEST'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint ruff pytest
          if [ "${{ github.event.issue.pull_request }}" = true ] ; then
            pip install https://github.com/changchiyou/Github-Action-Test/archive/$GITHUB_HEAD_REF.zip
          else
            pip install https://github.com/changchiyou/Github-Action-Test/archive/main.zip
          fi
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
      - name: Analysing the code with pylint
        id: pylint
        run: |
          pylint $(git ls-files '*.py') \
          --ignore=" \
            build, \
            __init__.py \
          " \
          --disable=" \
            fixme \
          " \
          --load-plugins=" \
            pylint.extensions.check_elif, \
            pylint.extensions.bad_builtin, \
            pylint.extensions.docparams, \
            pylint.extensions.for_any_all, \
            pylint.extensions.set_membership, \
            pylint.extensions.code_style, \
            pylint.extensions.overlapping_exceptions, \
            pylint.extensions.typing, \
            pylint.extensions.redefined_variable_type, \
            pylint.extensions.comparison_placement, \
            pylint.extensions.broad_try_clause, \
            pylint.extensions.dict_init_mutate, \
            pylint.extensions.consider_refactoring_into_while_condition, \
          " > pylint.txt
          echo "PYLINT_EXIT_CODE=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
      - name: Test with pytest
        id: pytest
        run: |
          pytest > pytest.txt
          echo "PYTEST_EXIT_CODE=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
      - name: Comment the result of pylint&pytest
        run: |
          if [ ${{ steps.pylint.outputs.PYLINT_EXIT_CODE }} -eq 0 ]; then
            pylint_result=":green_circle: **\`pylint\` passed**"
          else
            pylint_result=":red_circle: **\`pylint\` failed**"
          fi
          if [ ${{ steps.pytest.outputs.PYTEST_EXIT_CODE }} -eq 0 ]; then
            pytest_result=":green_circle: **\`pytest\` passed**"
          else
            pytest_result=":red_circle: **\`pytest\` failed**"
          fi

          echo -e "- $pylint_result\n\t<details><summary>pylint result</summary>\n\n$(cat pylint.txt | sed 's/^/\t/')\n\t</details>\n- $pytest_result\n\t<details><summary>pytest result</summary>\n\n$(cat pytest.txt | sed 's/^/\t/')\n\t</details>" > msg
          export msg=$(cat msg)

          if [ "${{ github.event.issue.pull_request }}" = true ] ; then
            gh pr comment "${{ github.event.issue.number }}" --body "$msg"
          else
            gh issue comment "${{ github.event.issue.number }}" --body "$msg"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
